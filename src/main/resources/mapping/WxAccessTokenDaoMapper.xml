<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwei.wxmanagement.wx.dao.WxAccessTokenDaoMapper" >
  <resultMap id="BaseResultMap" type="com.iwei.wxmanagement.wx.dto.WxAccessTokenDTO" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="access_token" property="accessToken" jdbcType="VARCHAR" />
    <result column="expires_in" property="expiresIn" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="INTEGER" />
    <result column="refresh_token" property="refreshToken" jdbcType="VARCHAR" />
    <result column="openid" property="openId" jdbcType="VARCHAR" />
    <result column="scope" property="scope" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, access_token, expires_in, start_time, refresh_token, openid, scope
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wx_access_token
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >

    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <!--<insert id="insert" parameterType="com.miaosha.dataobject.UserDO" >-->
    <!--insert into user (id, name, age-->
      <!--)-->
    <!--values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}-->
      <!--)-->
  <!--</insert>-->
  <!--<insert id="insertSelective" parameterType="com.miaosha.dataobject.UserDO" >-->
    <!--insert into user-->
    <!--<trim prefix="(" suffix=")" suffixOverrides="," >-->
      <!--<if test="id != null" >-->
        <!--id,-->
      <!--</if>-->
      <!--<if test="name != null" >-->
        <!--name,-->
      <!--</if>-->
      <!--<if test="age != null" >-->
        <!--age,-->
      <!--</if>-->
    <!--</trim>-->
    <!--<trim prefix="values (" suffix=")" suffixOverrides="," >-->
      <!--<if test="id != null" >-->
        <!--#{id,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="name != null" >-->
        <!--#{name,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="age != null" >-->
        <!--#{age,jdbcType=TINYINT},-->
      <!--</if>-->
    <!--</trim>-->
  <!--</insert>-->
  <update id="updateByPrimaryKeySelective" parameterType="com.iwei.wxmanagement.wx.dto.WxAccessTokenDTO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 21:49:05 CST 2019.
    -->
    update wx_access_token
    <set >
      <if test="accessToken != null" >
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expiresIn != null" >
        expires_in = #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=INTEGER},
      </if>
      <if test="refreshToken != null" >
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        openid = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        scope = #{scope,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iwei.wxmanagement.wx.dto.WxAccessTokenDTO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 21:49:05 CST 2019.
    -->
    update wx_access_token
    set access_token = #{accessToken,jdbcType=VARCHAR},
    expires_in = #{expiresIn,jdbcType=INTEGER},
    start_time = #{startTime,jdbcType=INTEGER},
    refresh_token = #{refreshToken,jdbcType=VARCHAR},
    openid = #{openId,jdbcType=VARCHAR},
    scope = #{scope,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>