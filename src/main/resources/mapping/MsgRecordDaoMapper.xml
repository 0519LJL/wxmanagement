<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwei.wxmanagement.wx.dao.MsgRecordMapper" >
  <resultMap id="BaseResultMap" type="com.iwei.wxmanagement.wx.msgRecord.dto.MsgRecordDTO" >
    <id column="msgid" property="msgid" jdbcType="INTEGER" />
    <id column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    msgid,openid, type, comment, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wx_msg_record
    where msgid = #{msgid,jdbcType=INTEGER}
  </select>

  <select id="selectBymid" resultMap="BaseResultMap" parameterType="com.iwei.wxmanagement.wx.memberQrCode.dto.MemberQrCodeDTO" >
    select
    <include refid="Base_Column_List" />
    from wx_msg_record
    where openid = #{openid,jdbcType=VARCHAR}
    <if test="type != null" >
      and type=#{type,jdbcType=INTEGER}
    </if>
  </select>

  <insert id="insert" parameterType="com.iwei.wxmanagement.wx.msgRecord.dto.MsgRecordDTO" >
    insert into wx_msg_record (
    openid,
    type,
    comment,
    create_time
      )
    values (
    #{openid,jdbcType=VARCHAR},
    #{type,jdbcType=INTEGER},
    #{comment,jdbcType=VARCHAR},
    #{createTime,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.iwei.wxmanagement.wx.dto.WxAccessTokenDTO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 21:49:05 CST 2019.
    -->
    update wx_member
    set access_token = #{accessToken,jdbcType=VARCHAR},
    expires_in = #{expiresIn,jdbcType=INTEGER},
    start_time = #{startTime,jdbcType=INTEGER},
    refresh_token = #{refreshToken,jdbcType=VARCHAR},
    openid = #{openId,jdbcType=VARCHAR},
    scope = #{scope,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>